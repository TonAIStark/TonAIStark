# coding: utf-8

"""
    AVNU API

    REST API documentation for accessing liquidity on Layer 2.  AVNU is a decentralized exchange protocol enabling the fastest and the most efficient operations in DeFi for Layer 2 with better pricing, zero slippage, MEV-protection and gasless trading.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from avnu_python_client.models.typed_data import TypedData

class TestTypedData(unittest.TestCase):
    """TypedData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TypedData:
        """Test TypedData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TypedData`
        """
        model = TypedData()
        if include_optional:
            return TypedData(
                types = {
                    'key' : [
                        avnu_python_client.models.type.Type(
                            name = '', 
                            type = '', )
                        ]
                    },
                primary_type = '',
                domain = avnu_python_client.models.domain.Domain(
                    name = avnu_python_client.models.json_primitive.JsonPrimitive(
                        content = '', 
                        is_string = True, ), 
                    version = avnu_python_client.models.json_primitive.JsonPrimitive(
                        content = '', 
                        is_string = True, ), 
                    chain_id = , 
                    revision = , 
                    resolved_revision = 'V0', 
                    separator_name__lib = '', ),
                message = {
                    'key' : avnu_python_client.models.json_element.JsonElement()
                    }
            )
        else:
            return TypedData(
                types = {
                    'key' : [
                        avnu_python_client.models.type.Type(
                            name = '', 
                            type = '', )
                        ]
                    },
                primary_type = '',
                domain = avnu_python_client.models.domain.Domain(
                    name = avnu_python_client.models.json_primitive.JsonPrimitive(
                        content = '', 
                        is_string = True, ), 
                    version = avnu_python_client.models.json_primitive.JsonPrimitive(
                        content = '', 
                        is_string = True, ), 
                    chain_id = , 
                    revision = , 
                    resolved_revision = 'V0', 
                    separator_name__lib = '', ),
                message = {
                    'key' : avnu_python_client.models.json_element.JsonElement()
                    },
        )
        """

    def testTypedData(self):
        """Test TypedData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
