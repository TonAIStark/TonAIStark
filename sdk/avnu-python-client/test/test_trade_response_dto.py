# coding: utf-8

"""
    AVNU API

    REST API documentation for accessing liquidity on Layer 2.  AVNU is a decentralized exchange protocol enabling the fastest and the most efficient operations in DeFi for Layer 2 with better pricing, zero slippage, MEV-protection and gasless trading.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from avnu_python_client.models.trade_response_dto import TradeResponseDto

class TestTradeResponseDto(unittest.TestCase):
    """TradeResponseDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TradeResponseDto:
        """Test TradeResponseDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TradeResponseDto`
        """
        model = TradeResponseDto()
        if include_optional:
            return TradeResponseDto(
                sell_amount = '',
                sell_amount_in_usd = 1.337,
                buy_amount = '',
                buy_amount_in_usd = 1.337,
                expected_trade_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                status = 'PENDING',
                actual_trade_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                tx_hash = '',
                error_reason = ''
            )
        else:
            return TradeResponseDto(
                sell_amount = '',
                expected_trade_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                status = 'PENDING',
        )
        """

    def testTradeResponseDto(self):
        """Test TradeResponseDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
