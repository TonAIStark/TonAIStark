# coding: utf-8

"""
    AVNU API

    REST API documentation for accessing liquidity on Layer 2.  AVNU is a decentralized exchange protocol enabling the fastest and the most efficient operations in DeFi for Layer 2 with better pricing, zero slippage, MEV-protection and gasless trading.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from avnu_python_client.api.paymaster_api import PaymasterApi


class TestPaymasterApi(unittest.TestCase):
    """PaymasterApi unit test stubs"""

    def setUp(self) -> None:
        self.api = PaymasterApi()

    def tearDown(self) -> None:
        pass

    def test_build_typed_data1(self) -> None:
        """Test case for build_typed_data1

        Build the typed data
        """
        pass

    def test_deploy_account1(self) -> None:
        """Test case for deploy_account1

        Deploy an account
        """
        pass

    def test_execute1(self) -> None:
        """Test case for execute1

        Execute the calls
        """
        pass

    def test_get_gas_token_prices(self) -> None:
        """Test case for get_gas_token_prices

        Get the supported gas tokens and their prices in ETH and USD
        """
        pass

    def test_get_rewards1(self) -> None:
        """Test case for get_rewards1

        Retrieve account's rewards
        """
        pass

    def test_get_sponsor(self) -> None:
        """Test case for get_sponsor

        """
        pass

    def test_is_compatible1(self) -> None:
        """Test case for is_compatible1

        Check if the account is compatible with the gasless service
        """
        pass

    def test_register_reward1(self) -> None:
        """Test case for register_reward1

        Add a reward to an account
        """
        pass

    def test_status(self) -> None:
        """Test case for status

        Get the current gasless service status
        """
        pass


if __name__ == '__main__':
    unittest.main()
