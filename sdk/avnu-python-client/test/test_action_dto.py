# coding: utf-8

"""
    AVNU API

    REST API documentation for accessing liquidity on Layer 2.  AVNU is a decentralized exchange protocol enabling the fastest and the most efficient operations in DeFi for Layer 2 with better pricing, zero slippage, MEV-protection and gasless trading.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from avnu_python_client.models.action_dto import ActionDto

class TestActionDto(unittest.TestCase):
    """ActionDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ActionDto:
        """Test ActionDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ActionDto`
        """
        model = ActionDto()
        if include_optional:
            return ActionDto(
                block_number = 56,
                var_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                transaction_hash = '',
                gas_fee = avnu_python_client.models.gas_fee_info.GasFeeInfo(
                    gas_fee_amount = '', 
                    gas_fee_amount_usd = 1.337, 
                    gas_fee_token_address = '', ),
                type = 'Swap',
                metadata = None
            )
        else:
            return ActionDto(
                block_number = 56,
                var_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                transaction_hash = '',
                type = 'Swap',
                metadata = None,
        )
        """

    def testActionDto(self):
        """Test ActionDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
